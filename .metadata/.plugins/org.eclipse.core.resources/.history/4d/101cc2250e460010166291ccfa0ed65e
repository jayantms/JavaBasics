package basics.codingpractice;

import java.util.ArrayList;
import java.util.List;

public class AddNumberUsingLinkedList {

	public static void main(String[] args) {
		
		ListNode l1 = new ListNode(2, new ListNode(4, new ListNode(3, null))); 
		ListNode l2 = new ListNode(5, new ListNode(6, new ListNode(4, null)));
		
		List<Integer> l1list = getNumFromList(l1); 
		List<Integer> l2list = getNumFromList(l2); 

		System.out.println(l1list.toString()); 
		System.out.println(l2list.toString()); 
		
		int[] list1 = (int[]) l1list.toArray(); 
		
		int[] list1 = new int[] {2,4,3}; 
		int[] list2 = new int[] {5,6,4}; 
		
		int num1 = findnumber(list1); 
		int num2 = findnumber(list2);
		int num3 = num1 + num2; 

		getNumList(num3); 
	
	}
	
	
	public static List<Integer> getNumFromList(ListNode lx) {
		List<Integer> lxlist = new ArrayList<Integer>();
		while(lx != null) {
			lxlist.add(lx.val);
			lx = lx.next; 
		}
		return lxlist; 
	}
	

	public static int findnumber(int[] listdata) {
		int num = 0; 
		int k=1; 
		for(int i=0 ; i < listdata.length ; i++) {
			num = num + listdata[i]*k;  
			k = k*10; 
		}
		return num; 
	}
	
	public static int[] getNumList(int num) { 
		
		String lst3 = Integer.toString(num);
		String lst4 = new StringBuilder(lst3).reverse().toString();
		
		int sum = Integer.parseInt(lst4);
		//System.out.println(sum);
		
		int[] list3 = new int[lst4.length()];
		int k = sum; 
		
		int j=0;
		for(int i=0 ; i < lst4.length() ; i++) { 
			System.out.println(k % 10); 
			list3[j] = k % 10; 
			k = k/10; 
		}
		return list3; 
	}
}
